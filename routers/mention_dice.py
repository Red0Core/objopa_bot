from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message
from services.gpt import GeminiModel, OpenRouterModel, APIKeyError, AIModelError, RateLimitError, UnexpectedResponseError, QuotaExceededError
from config import GEMINI_API_KEY
import re

router = Router()
AI_CLIENT = GeminiModel(api_key=GEMINI_API_KEY)

def markdown_to_telegram_html(text: str) -> str:
    """
    –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Ç–µ–∫—Å—Ç –∏–∑ Markdown –≤ HTML –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ Telegram, —Å—Ç—Ä–æ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–º —Ç–µ–≥–∞–º.
    """
    # 1. –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤
    text = text.replace('&', '&amp;').replace('<', '&lt;').replace('>', '&gt;')

    # 2. –ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç (**text** -> <b>text</b>)
    text = re.sub(r'\*\*(.+?)\*\*', r'<b>\1</b>', text)

    # 3. –ö—É—Ä—Å–∏–≤ (*text* -> <i>text</i>)
    text = re.sub(r'\*(.+?)\*', r'<i>\1</i>', text)

    # 4. –ó–∞—á—ë—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç (~~text~~ -> <s>text</s>)
    text = re.sub(r'~~(.+?)~~', r'<s>\1</s>', text)

    # 5. –ü–æ–¥—á—ë—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç (__text__ -> <u>text</u>)
    text = re.sub(r'__(.+?)__', r'<u>\1</u>', text)

    # 6. –°—Å—ã–ª–∫–∏ ([text](url) -> <a href="url">text</a>)
    text = re.sub(r'\[(.+?)\]\((.+?)\)', r'<a href="\2">\1</a>', text)

    # 7. –ë–ª–æ–∫–∏ –∫–æ–¥–∞ (```code``` -> <pre>code</pre>)
    text = re.sub(r'```(.+?)```', r'<pre>\1</pre>', text, flags=re.DOTALL)

    # 8. Inline-–∫–æ–¥ (`code` -> <code>code</code>)
    text = re.sub(r'`(.+?)`', r'<code>\1</code>', text)

    # 9. –°–ø–æ–π–ª–µ—Ä—ã (||text|| -> <tg-spoiler>text</tg-spoiler>)
    text = re.sub(r'\|\|(.+?)\|\|', r'<tg-spoiler>\1</tg-spoiler>', text)

    # 10. –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤ –≤–æ–∫—Ä—É–≥ HTML-—Ç–µ–≥–æ–≤
    text = re.sub(r'>\s+<', '><', text)

    return text

@router.message(Command("dice"))
async def handle_mention(message: Message, bot):
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ
    await message.reply("–°–µ–π—á–∞—Å —è —Ä–µ—à—É —ç—Ç–æ —Å –ø–æ–º–æ—â—å—é –∫—É–±–∏–∫–∞! üé≤")
    
    # –ë—Ä–æ—Å–∞–µ–º –∫—É–±–∏–∫
    dice_message = await bot.send_dice(message.chat.id)
    dice_value = dice_message.dice.value  # –ó–Ω–∞—á–µ–Ω–∏–µ –∫—É–±–∏–∫–∞ (1-6)

    system_prompt = """
–¢—ã ‚Äî –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –∏ –≤–µ—Å—ë–ª—ã–π –ø–æ–º–æ—â–Ω–∏–∫. 
–ö–æ–≥–¥–∞ —á–µ–ª–æ–≤–µ–∫ –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ —Ç–µ–±–µ, —Ç—ã –æ—Ç–≤–µ—á–∞–µ—à—å –≤ —Å—Ç–∏–ª–µ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–µ–≥–æ –∏ –Ω–µ–º–Ω–æ–≥–æ —à—É—Ç–æ—á–Ω–æ–≥–æ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –ø–∏—Å—å–º–∞ –∏–ª–∏ –¥–∞—ë—à—å –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π —Å–ø–∏—Å–æ–∫ "–∑–∞ –∏ –ø—Ä–æ—Ç–∏–≤".
–¢—ã –≤—Å–µ–≥–¥–∞ –Ω–∞—Ö–æ–¥–∏—à—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∏ –¥–æ–±–∞–≤–ª—è–µ—à—å –Ω–µ–º–Ω–æ–≥–æ —é–º–æ—Ä–∞, —á—Ç–æ–±—ã –ø–æ–¥–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ.
–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî —Å–¥–µ–ª–∞—Ç—å –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–º—Å—è.
–ú–∞–∫—Å–∏–º—É–º 1-2 –∞–±–∑–∞—Ü–∞. –ù–∞–¥–æ –∫–æ—Ä–æ—Ç–∫–æ, –Ω–æ —Å–º–µ—à–Ω–æ! –ß–µ–º –º–µ–Ω—å—à–µ —Ç–µ–∫—Å—Ç–∞, —Ç–µ–º –ª—É—á—à–µ!
–ï—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–∞ –∫—É–±–∏–∫–∞ —Ä–∞–≤–µ–Ω 1-3, —Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—à—å –∏–¥–µ—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ 4-6 ‚Äî –æ—Ç–≥–æ–≤–∞—Ä–∏–≤–∞–µ—à—å –µ–≥–æ.
"""

    action_prompt = f"""
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–¥—É–º–∞–ª—Å—è –æ —Å–ª–µ–¥—É—é—â–µ–º: "{message.text.split(maxsplit=1)[1]}". –ë—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞ –ø–æ–∫–∞–∑–∞–ª {dice_value}. –ù–∞–ø–∏—à–∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –∏ –≤–µ—Å—ë–ª—ã–π —Ç–µ–∫—Å—Ç:
- –ï—Å–ª–∏ –∫—É–±–∏–∫ –ø–æ–∫–∞–∑–∞–ª 1-3: –ù–∞–ø–∏—à–∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–µ–µ –ø–∏—Å—å–º–æ, –æ–±—ä—è—Å–Ω—è—é—â–µ–µ, –ø–æ—á–µ–º—É —ç—Ç–æ –æ—Ç–ª–∏—á–Ω–∞—è –∏–¥–µ—è.
- –ï—Å–ª–∏ –∫—É–±–∏–∫ –ø–æ–∫–∞–∑–∞–ª 4-6: –ù–∞–ø–∏—à–∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π —Ç–µ–∫—Å—Ç —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —é–º–æ—Ä–∞, –æ–±—ä—è—Å–Ω—è—é—â–∏–π, –ø–æ—á–µ–º—É —ç—Ç–æ –ø–ª–æ—Ö–∞—è –∏–¥–µ—è.

–°—Ç–∞—Ä–∞–π—Å—è –¥–µ–ª–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ –∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º–∏. –î–æ–±–∞–≤–ª—è–π –º–µ—Ç–∞—Ñ–æ—Ä—ã, —à—É—Ç–∫–∏ –∏–ª–∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –ø–æ–≤–æ—Ä–æ—Ç—ã. –¢–≤–æ–π —Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ª—ë–≥–∫–∏–º –∏ –ø–æ–¥–Ω–∏–º–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ.
"""

    try:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ OpenAI API
        text = await AI_CLIENT.get_response(
            action_prompt, 
            system_prompt
        )
        cleaned_text = markdown_to_telegram_html(text)

        await message.reply(cleaned_text, parse_mode="HTML")
    except APIKeyError as e:
        await message.reply("–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π API-–∫–ª—é—á. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
    except RateLimitError as e:
        await message.reply("–û—à–∏–±–∫–∞: –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    except QuotaExceededError as e:
        await message.reply("–û—à–∏–±–∫–∞: –ü—Ä–µ–≤—ã—à–µ–Ω–∞ –∫–≤–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API.")
    except UnexpectedResponseError as e:
        await message.reply("–û—à–∏–±–∫–∞: –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    except AIModelError as e:
        await message.reply(f"–û—à–∏–±–∫–∞: {str(e)}")

@router.message(Command("ask"))
async def handle_ask_gpt(message: Message, bot):
    try:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ OpenAI API
        text = await AI_CLIENT.get_response(
            message.text.split(maxsplit=1)[1]
        )
        cleaned_text = markdown_to_telegram_html(text)

        await message.reply(cleaned_text, parse_mode="HTML")
    except APIKeyError as e:
        await message.reply("–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π API-–∫–ª—é—á. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
    except RateLimitError as e:
        await message.reply("–û—à–∏–±–∫–∞: –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    except QuotaExceededError as e:
        await message.reply("–û—à–∏–±–∫–∞: –ü—Ä–µ–≤—ã—à–µ–Ω–∞ –∫–≤–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API.")
    except UnexpectedResponseError as e:
        await message.reply("–û—à–∏–±–∫–∞: –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    except AIModelError as e:
        await message.reply(f"–û—à–∏–±–∫–∞: {str(e)}")
