import re
import uuid
import asyncio
import json
from pathlib import Path
from typing import List, Dict, Any, Optional

from aiogram import Router, F
from aiogram.types import Message, FSInputFile
from aiogram.filters import Command
from aiogram.enums.parse_mode import ParseMode

from core.redis_client import redis
from core.logger import logger
from core.config import BACKEND_ROUTE

video_router = Router()

@video_router.message(Command("generate_video"))
async def handle_generate_video_command(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /generate_video.
    –û–±—ä—è—Å–Ω—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –∫–∞–∫ –Ω–∞—á–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤–∏–¥–µ–æ.
    """
    help_text = (
        "üé¨ <b>–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ</b>\n\n"
        "–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –≤–∏–¥–µ–æ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –¥–≤–∞ —Ñ–∞–π–ª–∞:\n"
        "1. <code>–ø—Ä–æ–º–ø—Ç—ã.img.txt</code> - —Ñ–∞–π–ª —Å –ø—Ä–æ–º–ø—Ç–∞–º–∏ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫—É)\n"
        "2. <code>–ø—Ä–æ–º–ø—Ç—ã.anim.txt</code> - —Ñ–∞–π–ª —Å –ø—Ä–æ–º–ø—Ç–∞–º–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫—É)\n\n"
        "–ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ —è –Ω–∞—á–Ω—É –ø—Ä–æ—Ü–µ—Å—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ. –í–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç "
        "–≤—ã–±—Ä–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ü–µ–Ω—ã, –∞ –∑–∞—Ç–µ–º —è —Å–æ–∑–¥–∞–º –≥–æ—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ."
    )
    await message.reply(help_text, parse_mode=ParseMode.HTML)

@video_router.message(F.document.file_name.endswith(".img.txt") | F.document.file_name.endswith(".anim.txt"))
async def handle_prompt_file(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–∞–π–ª–æ–≤ .img.txt –∏ .anim.txt —Å –ø—Ä–æ–º–ø—Ç–∞–º–∏.
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø—Ä–æ–º–ø—Ç—ã –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤–∏–¥–µ–æ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –æ–±–æ–∏—Ö —Ñ–∞–π–ª–æ–≤.
    """
    if not message.document:
        return
    
    file_name = message.document.file_name
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–º–±–∏–Ω–∞—Ü–∏—é chat_id –∏ user_id –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    chat_id = str(message.chat.id)
    user_id = str(message.from_user.id) if message.from_user else "unknown"
    session_key = f"{chat_id}:{user_id}"
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª—é—á–∏ Redis –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤
    img_prompts_key = f"video_gen:img_prompts:{session_key}"
    anim_prompts_key = f"video_gen:anim_prompts:{session_key}"
    
    # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
    file = await message.bot.get_file(message.document.file_id)
    file_path = await message.bot.download_file(file.file_path)
    
    # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –∏ —Ä–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —Å—Ç—Ä–æ–∫–∏
    content = file_path.read().decode('utf-8').strip()
    prompts = [line.strip() for line in content.split('\n') if line.strip()]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã
    existing_prompts_json = None
    overwrite_message = ""
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–º–ø—Ç—ã –≤ Redis –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
    if file_name.endswith(".img.txt"):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        existing_prompts_json = await redis.get(img_prompts_key)
        if existing_prompts_json:
            overwrite_message = "‚ö†Ô∏è –ü—Ä–æ–º–ø—Ç—ã –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –±—ã–ª–∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω—ã.\n\n"
            
        await redis.set(img_prompts_key, json.dumps(prompts))
        await message.reply(
            f"{overwrite_message}‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(prompts)} –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.\n\n"
            f"–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª —Å –ø—Ä–æ–º–ø—Ç–∞–º–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π (<code>–ø—Ä–æ–º–ø—Ç—ã.anim.txt</code>), "
            f"–µ—Å–ª–∏ –≤—ã –µ—â—ë —ç—Ç–æ–≥–æ –Ω–µ —Å–¥–µ–ª–∞–ª–∏.",
            parse_mode=ParseMode.HTML
        )
    elif file_name.endswith(".anim.txt"):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π
        existing_prompts_json = await redis.get(anim_prompts_key)
        if existing_prompts_json:
            overwrite_message = "‚ö†Ô∏è –ü—Ä–æ–º–ø—Ç—ã –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π –±—ã–ª–∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω—ã.\n\n"
            
        await redis.set(anim_prompts_key, json.dumps(prompts))
        await message.reply(
            f"{overwrite_message}‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(prompts)} –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π.\n\n"
            f"–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª —Å –ø—Ä–æ–º–ø—Ç–∞–º–∏ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (<code>–ø—Ä–æ–º–ø—Ç—ã.img.txt</code>), "
            f"–µ—Å–ª–∏ –≤—ã –µ—â—ë —ç—Ç–æ–≥–æ –Ω–µ —Å–¥–µ–ª–∞–ª–∏.",
            parse_mode=ParseMode.HTML
        )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±–æ–∏—Ö —Ç–∏–ø–æ–≤ –ø—Ä–æ–º–ø—Ç–æ–≤
    has_img_prompts = await redis.exists(img_prompts_key)
    has_anim_prompts = await redis.exists(anim_prompts_key)
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å –æ–±–∞ —Ç–∏–ø–∞ –ø—Ä–æ–º–ø—Ç–æ–≤, –∑–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
    if has_img_prompts and has_anim_prompts:
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–º–ø—Ç—ã
        img_prompts_json = await redis.get(img_prompts_key)
        anim_prompts_json = await redis.get(anim_prompts_key)
        
        img_prompts = json.loads(img_prompts_json)
        anim_prompts = json.loads(anim_prompts_json)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–º–ø—Ç–æ–≤ —Å–æ–≤–ø–∞–¥–∞–µ—Ç
        if len(img_prompts) != len(anim_prompts):
            await message.reply(
                "‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ:</b> –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –∞–Ω–∏–º–∞—Ü–∏–π –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç!\n\n"
                f"–£ –≤–∞—Å {len(img_prompts)} –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ {len(anim_prompts)} –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π.\n"
                f"–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è, —á—Ç–æ–±—ã –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—ã–ª–æ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º. –ù–æ –µ—Å–ª–∏ –≤—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –≤—Å—ë –ø—Ä–∞–≤–∏–ª—å–Ω–æ, "
                f"–æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start_generation –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞.",
                parse_mode=ParseMode.HTML
            )
        else:
            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
            await start_video_generation(message, img_prompts, anim_prompts)

@video_router.message(Command("start_generation"))
async def handle_start_generation(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start_generation.
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤.
    """
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–º–±–∏–Ω–∞—Ü–∏—é chat_id –∏ user_id –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    chat_id = str(message.chat.id)
    user_id = str(message.from_user.id) if message.from_user else "unknown"
    session_key = f"{chat_id}:{user_id}"
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª—é—á–∏ Redis –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤
    img_prompts_key = f"video_gen:img_prompts:{session_key}"
    anim_prompts_key = f"video_gen:anim_prompts:{session_key}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±–æ–∏—Ö —Ç–∏–ø–æ–≤ –ø—Ä–æ–º–ø—Ç–æ–≤
    has_img_prompts = await redis.exists(img_prompts_key)
    has_anim_prompts = await redis.exists(anim_prompts_key)
    
    if not has_img_prompts or not has_anim_prompts:
        missing = []
        if not has_img_prompts:
            missing.append("–ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
        if not has_anim_prompts:
            missing.append("–ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π")
        
        await message.reply(
            f"‚ùå –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç {' –∏ '.join(missing)}!\n\n"
            f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã —Å –ø—Ä–æ–º–ø—Ç–∞–º–∏ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.",
            parse_mode=ParseMode.HTML
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–º–ø—Ç—ã
    img_prompts_json = await redis.get(img_prompts_key)
    anim_prompts_json = await redis.get(anim_prompts_key)
    
    img_prompts = json.loads(img_prompts_json)
    anim_prompts = json.loads(anim_prompts_json)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    await start_video_generation(message, img_prompts, anim_prompts)

async def start_video_generation(message: Message, img_prompts: List[str], anim_prompts: List[str]):
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ.
    
    Args:
        message: –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        img_prompts: –°–ø–∏—Å–æ–∫ –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        anim_prompts: –°–ø–∏—Å–æ–∫ –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π
    """
    # –ü–æ–ª—É—á–∞–µ–º user_id –∏ chat_id –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è session_key
    chat_id = str(message.chat.id)
    user_id = str(message.from_user.id) if message.from_user else "unknown"
    session_key = f"{chat_id}:{user_id}"
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É –¥–ª—è –≤–æ—Ä–∫–µ—Ä–∞
    task_id = str(uuid.uuid4())
    
    task = {
        "task_id": task_id,
        "type": "video_generation",
        "created_at": message.date.isoformat(),
        "data": {
            "user_id": message.chat.id,
            "image_prompts": img_prompts,
            "animation_prompts": anim_prompts
        }
    }
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    await message.reply(
        f"üé¨ <b>–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ –Ω–∞—á–∞–ª–∞—Å—å!</b>\n\n"
        f"‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ü–µ–Ω: <b>{len(img_prompts)}</b>\n"
        f"‚Ä¢ ID –∑–∞–¥–∞—á–∏: <code>{task_id}</code>\n\n"
        f"–Ø –æ—Ç–ø—Ä–∞–≤–ª—é –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –≤—ã–±–æ—Ä–∞. –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π "
        f"–Ω–∞—á–Ω–µ—Ç—Å—è —Å–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–π –∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–µ–æ.",
        parse_mode=ParseMode.HTML
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –≤ –æ—á–µ—Ä–µ–¥—å Redis
    await redis.rpush("hailuo_tasks", json.dumps(task))
    logger.info(f"–ó–∞–¥–∞—á–∞ –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤–∏–¥–µ–æ {task_id} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –æ—á–µ—Ä–µ–¥—å")
    
    # –û—á–∏—â–∞–µ–º –ø—Ä–æ–º–ø—Ç—ã –∏–∑ Redis
    await redis.delete(f"video_gen:img_prompts:{session_key}")
    await redis.delete(f"video_gen:anim_prompts:{session_key}")
